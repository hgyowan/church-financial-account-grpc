// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: workspace/v1/workspace.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	v1 "github.com/hgyowan/church-financial-account-grpc/gen/workspace/model/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/httpbody"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListWorkspaceIntroRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sort          string `protobuf:"bytes,1,opt,name=sort,proto3" json:"sort,omitempty"`
	SortDirection string `protobuf:"bytes,2,opt,name=sortDirection,proto3" json:"sortDirection,omitempty"`
	PageNo        int32  `protobuf:"varint,3,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize      int32  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ListWorkspaceIntroRequest) Reset() {
	*x = ListWorkspaceIntroRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workspace_v1_workspace_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkspaceIntroRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkspaceIntroRequest) ProtoMessage() {}

func (x *ListWorkspaceIntroRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_workspace_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkspaceIntroRequest.ProtoReflect.Descriptor instead.
func (*ListWorkspaceIntroRequest) Descriptor() ([]byte, []int) {
	return file_workspace_v1_workspace_proto_rawDescGZIP(), []int{0}
}

func (x *ListWorkspaceIntroRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListWorkspaceIntroRequest) GetSortDirection() string {
	if x != nil {
		return x.SortDirection
	}
	return ""
}

func (x *ListWorkspaceIntroRequest) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *ListWorkspaceIntroRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListWorkspaceIntroResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*v1.WorkspaceIntro `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	HasNext bool                 `protobuf:"varint,2,opt,name=hasNext,proto3" json:"hasNext,omitempty"`
}

func (x *ListWorkspaceIntroResponse) Reset() {
	*x = ListWorkspaceIntroResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workspace_v1_workspace_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkspaceIntroResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkspaceIntroResponse) ProtoMessage() {}

func (x *ListWorkspaceIntroResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_workspace_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkspaceIntroResponse.ProtoReflect.Descriptor instead.
func (*ListWorkspaceIntroResponse) Descriptor() ([]byte, []int) {
	return file_workspace_v1_workspace_proto_rawDescGZIP(), []int{1}
}

func (x *ListWorkspaceIntroResponse) GetList() []*v1.WorkspaceIntro {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListWorkspaceIntroResponse) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

type SendWorkspaceInviteMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceId string `protobuf:"bytes,1,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	Message     string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendWorkspaceInviteMessageRequest) Reset() {
	*x = SendWorkspaceInviteMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workspace_v1_workspace_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendWorkspaceInviteMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendWorkspaceInviteMessageRequest) ProtoMessage() {}

func (x *SendWorkspaceInviteMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_workspace_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendWorkspaceInviteMessageRequest.ProtoReflect.Descriptor instead.
func (*SendWorkspaceInviteMessageRequest) Descriptor() ([]byte, []int) {
	return file_workspace_v1_workspace_proto_rawDescGZIP(), []int{2}
}

func (x *SendWorkspaceInviteMessageRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *SendWorkspaceInviteMessageRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SendWorkspaceInviteMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendWorkspaceInviteMessageResponse) Reset() {
	*x = SendWorkspaceInviteMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workspace_v1_workspace_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendWorkspaceInviteMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendWorkspaceInviteMessageResponse) ProtoMessage() {}

func (x *SendWorkspaceInviteMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_v1_workspace_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendWorkspaceInviteMessageResponse.ProtoReflect.Descriptor instead.
func (*SendWorkspaceInviteMessageResponse) Descriptor() ([]byte, []int) {
	return file_workspace_v1_workspace_proto_rawDescGZIP(), []int{3}
}

var File_workspace_v1_workspace_proto protoreflect.FileDescriptor

var file_workspace_v1_workspace_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x62, 0x6f,
	0x64, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbf, 0x02, 0x0a, 0x19, 0x4c, 0x69, 0x73,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x26, 0x92, 0x41, 0x23, 0x32, 0x21, 0xec, 0xa0, 0x95, 0xeb, 0xa0,
	0xac, 0x20, 0xea, 0xb8, 0xb0, 0xec, 0xa4, 0x80, 0x20, 0x28, 0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x20,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x29, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x3d, 0x0a, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12,
	0xec, 0xa0, 0x95, 0xeb, 0xa0, 0xac, 0x20, 0x28, 0x61, 0x73, 0x63, 0x2c, 0x20, 0x64, 0x65, 0x73,
	0x63, 0x29, 0x52, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x0e, 0x92, 0x41, 0x0b, 0x32, 0x09, 0xed, 0x8e, 0x98, 0xec, 0x9d, 0xb4, 0xec, 0xa7,
	0x80, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x31, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x15, 0x92, 0x41, 0x12,
	0x32, 0x10, 0xed, 0x8e, 0x98, 0xec, 0x9d, 0xb4, 0xec, 0xa7, 0x80, 0x20, 0xed, 0x81, 0xac, 0xea,
	0xb8, 0xb0, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x3a, 0x4c, 0x92, 0x41,
	0x49, 0x0a, 0x47, 0x32, 0x31, 0xec, 0x9b, 0x8c, 0xed, 0x81, 0xac, 0xec, 0x8a, 0xa4, 0xed, 0x8e,
	0x98, 0xec, 0x9d, 0xb4, 0xec, 0x8a, 0xa4, 0x20, 0xec, 0x86, 0x8c, 0xea, 0xb0, 0x9c, 0x20, 0xeb,
	0xa6, 0xac, 0xec, 0x8a, 0xa4, 0xed, 0x8a, 0xb8, 0x20, 0xec, 0xa1, 0xb0, 0xed, 0x9a, 0x8c, 0x20,
	0xec, 0x9a, 0x94, 0xec, 0xb2, 0xad, 0xd2, 0x01, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0xd2,
	0x01, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xfe, 0x01, 0x0a, 0x1a, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x72,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x42, 0x25, 0x92, 0x41, 0x22,
	0x32, 0x20, 0xec, 0x9b, 0x8c, 0xed, 0x81, 0xac, 0xec, 0x8a, 0xa4, 0xed, 0x8e, 0x98, 0xec, 0x9d,
	0xb4, 0xec, 0x8a, 0xa4, 0x20, 0xec, 0x86, 0x8c, 0xea, 0xb0, 0x9c, 0x20, 0xeb, 0xaa, 0xa9, 0xeb,
	0xa1, 0x9d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x4e,
	0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x1c, 0x92, 0x41, 0x19, 0x32, 0x17,
	0xeb, 0x8b, 0xa4, 0xec, 0x9d, 0x8c, 0x20, 0xed, 0x8e, 0x98, 0xec, 0x9d, 0xb4, 0xec, 0xa7, 0x80,
	0x20, 0xec, 0x97, 0xac, 0xeb, 0xb6, 0x80, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74,
	0x3a, 0x49, 0x92, 0x41, 0x46, 0x0a, 0x44, 0x32, 0x31, 0xec, 0x9b, 0x8c, 0xed, 0x81, 0xac, 0xec,
	0x8a, 0xa4, 0xed, 0x8e, 0x98, 0xec, 0x9d, 0xb4, 0xec, 0x8a, 0xa4, 0x20, 0xec, 0x86, 0x8c, 0xea,
	0xb0, 0x9c, 0x20, 0xeb, 0xa6, 0xac, 0xec, 0x8a, 0xa4, 0xed, 0x8a, 0xb8, 0x20, 0xec, 0xa1, 0xb0,
	0xed, 0x9a, 0x8c, 0x20, 0xec, 0x9d, 0x91, 0xeb, 0x8b, 0xb5, 0xd2, 0x01, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0xd2, 0x01, 0x07, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x22, 0xe8, 0x01, 0x0a, 0x21,
	0x53, 0x65, 0x6e, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x43, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x21, 0x92, 0x41, 0x1e, 0x32, 0x1c, 0xec, 0x9b, 0x8c,
	0xed, 0x81, 0xac, 0xec, 0x8a, 0xa4, 0xed, 0x8e, 0x98, 0xec, 0x9d, 0xb4, 0xec, 0x8a, 0xa4, 0x20,
	0xec, 0x95, 0x84, 0xec, 0x9d, 0xb4, 0xeb, 0x94, 0x94, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0x92, 0x41, 0x12, 0x32, 0x10, 0xec, 0x86,
	0x8c, 0xea, 0xb0, 0x9c, 0x20, 0xeb, 0xa9, 0x94, 0xec, 0x8b, 0x9c, 0xec, 0xa7, 0x80, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3a, 0x4d, 0x92, 0x41, 0x4a, 0x0a, 0x48, 0x32, 0x2e,
	0xec, 0x9b, 0x8c, 0xed, 0x81, 0xac, 0xec, 0x8a, 0xa4, 0xed, 0x8e, 0x98, 0xec, 0x9d, 0xb4, 0xec,
	0x8a, 0xa4, 0x20, 0xec, 0xb4, 0x88, 0xeb, 0x8c, 0x80, 0x20, 0xeb, 0xa9, 0x94, 0xec, 0x9d, 0xbc,
	0x20, 0xeb, 0xb0, 0x9c, 0xec, 0x86, 0xa1, 0x20, 0xec, 0x9d, 0x91, 0xeb, 0x8b, 0xb5, 0xd2, 0x01,
	0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0xd2, 0x01, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x24, 0x0a, 0x22, 0x53, 0x65, 0x6e, 0x64, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xaa, 0x07, 0x0a,
	0x10, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x87, 0x03, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x27, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e,
	0x74, 0x72, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9d, 0x02, 0x92, 0x41,
	0xf9, 0x01, 0x12, 0x2a, 0xec, 0x9b, 0x8c, 0xed, 0x81, 0xac, 0xec, 0x8a, 0xa4, 0xed, 0x8e, 0x98,
	0xec, 0x9d, 0xb4, 0xec, 0x8a, 0xa4, 0x20, 0xec, 0x86, 0x8c, 0xea, 0xb0, 0x9c, 0x20, 0xeb, 0xa6,
	0xac, 0xec, 0x8a, 0xa4, 0xed, 0x8a, 0xb8, 0x20, 0xec, 0xa1, 0xb0, 0xed, 0x9a, 0x8c, 0x1a, 0x2a,
	0xec, 0x9b, 0x8c, 0xed, 0x81, 0xac, 0xec, 0x8a, 0xa4, 0xed, 0x8e, 0x98, 0xec, 0x9d, 0xb4, 0xec,
	0x8a, 0xa4, 0x20, 0xec, 0x86, 0x8c, 0xea, 0xb0, 0x9c, 0x20, 0xeb, 0xa6, 0xac, 0xec, 0x8a, 0xa4,
	0xed, 0x8a, 0xb8, 0x20, 0xec, 0xa1, 0xb0, 0xed, 0x9a, 0x8c, 0x4a, 0x50, 0x0a, 0x03, 0x34, 0x30,
	0x30, 0x12, 0x49, 0x0a, 0x1b, 0x28, 0x34, 0x30, 0x30, 0x30, 0x31, 0x29, 0x20, 0x77, 0x72, 0x6f,
	0x6e, 0x67, 0x20, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x2a, 0x0a, 0x28, 0x4a, 0x26, 0x7b, 0x22, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x3a, 0x20, 0x22,
	0xec, 0x97, 0x90, 0xeb, 0x9f, 0xac, 0xec, 0xbd, 0x94, 0xeb, 0x93, 0x9c, 0x22, 0x2c, 0x20, 0x22,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x20, 0x6e, 0x75, 0x6c, 0x6c, 0x7d, 0x4a, 0x4d, 0x0a, 0x03,
	0x35, 0x30, 0x30, 0x12, 0x46, 0x0a, 0x18, 0x28, 0x31, 0x30, 0x30, 0x30, 0x34, 0x29, 0x20, 0x66,
	0x61, 0x69, 0x6c, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x2a, 0x0a, 0x28, 0x4a, 0x26, 0x7b, 0x22, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x3a, 0x20, 0x22, 0xec,
	0x97, 0x90, 0xeb, 0x9f, 0xac, 0xec, 0xbd, 0x94, 0xeb, 0x93, 0x9c, 0x22, 0x2c, 0x20, 0x22, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x3a, 0x20, 0x6e, 0x75, 0x6c, 0x6c, 0x7d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1a, 0x12, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x8b, 0x04, 0x0a, 0x1a,
	0x53, 0x65, 0x6e, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x89, 0x03,
	0x92, 0x41, 0xe1, 0x02, 0x12, 0x27, 0xec, 0x9b, 0x8c, 0xed, 0x81, 0xac, 0xec, 0x8a, 0xa4, 0xed,
	0x8e, 0x98, 0xec, 0x9d, 0xb4, 0xec, 0x8a, 0xa4, 0x20, 0xec, 0xb4, 0x88, 0xeb, 0x8c, 0x80, 0x20,
	0xeb, 0xa9, 0x94, 0xec, 0x9d, 0xbc, 0x20, 0xeb, 0xb0, 0x9c, 0xec, 0x86, 0xa1, 0x1a, 0x27, 0xec,
	0x9b, 0x8c, 0xed, 0x81, 0xac, 0xec, 0x8a, 0xa4, 0xed, 0x8e, 0x98, 0xec, 0x9d, 0xb4, 0xec, 0x8a,
	0xa4, 0x20, 0xec, 0xb4, 0x88, 0xeb, 0x8c, 0x80, 0x20, 0xeb, 0xa9, 0x94, 0xec, 0x9d, 0xbc, 0x20,
	0xeb, 0xb0, 0x9c, 0xec, 0x86, 0xa1, 0x4a, 0x50, 0x0a, 0x03, 0x34, 0x30, 0x30, 0x12, 0x49, 0x0a,
	0x1b, 0x28, 0x34, 0x30, 0x30, 0x30, 0x31, 0x29, 0x20, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x28,
	0x4a, 0x26, 0x7b, 0x22, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x3a, 0x20, 0x22, 0xec, 0x97, 0x90, 0xeb,
	0x9f, 0xac, 0xec, 0xbd, 0x94, 0xeb, 0x93, 0x9c, 0x22, 0x2c, 0x20, 0x22, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x3a, 0x20, 0x6e, 0x75, 0x6c, 0x6c, 0x7d, 0x4a, 0x4b, 0x0a, 0x03, 0x34, 0x30, 0x34, 0x12,
	0x44, 0x0a, 0x16, 0x28, 0x34, 0x30, 0x30, 0x30, 0x34, 0x29, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x66,
	0x6f, 0x75, 0x6e, 0x64, 0x20, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x28, 0x4a, 0x26, 0x7b,
	0x22, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x3a, 0x20, 0x22, 0xec, 0x97, 0x90, 0xeb, 0x9f, 0xac, 0xec,
	0xbd, 0x94, 0xeb, 0x93, 0x9c, 0x22, 0x2c, 0x20, 0x22, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x20,
	0x6e, 0x75, 0x6c, 0x6c, 0x7d, 0x4a, 0x6e, 0x0a, 0x03, 0x35, 0x30, 0x30, 0x12, 0x67, 0x0a, 0x39,
	0x28, 0x31, 0x30, 0x30, 0x30, 0x31, 0x29, 0x20, 0x66, 0x61, 0x69, 0x6c, 0x20, 0x74, 0x6f, 0x20,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x3c, 0x62, 0x72, 0x3e,
	0x20, 0x28, 0x31, 0x30, 0x30, 0x30, 0x34, 0x29, 0x20, 0x66, 0x61, 0x69, 0x6c, 0x20, 0x74, 0x6f,
	0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x28, 0x4a, 0x26, 0x7b,
	0x22, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x3a, 0x20, 0x22, 0xec, 0x97, 0x90, 0xeb, 0x9f, 0xac, 0xec,
	0xbd, 0x94, 0xeb, 0x93, 0x9c, 0x22, 0x2c, 0x20, 0x22, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x20,
	0x6e, 0x75, 0x6c, 0x6c, 0x7d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19,
	0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x42, 0xe1, 0x02, 0x5a, 0x41, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x67, 0x79, 0x6f, 0x77, 0x61, 0x6e,
	0x2f, 0x63, 0x68, 0x75, 0x72, 0x63, 0x68, 0x2d, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61,
	0x6c, 0x2d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x92,
	0x41, 0x9a, 0x02, 0x12, 0x68, 0x0a, 0x0f, 0x43, 0x46, 0x4d, 0x20, 0x41, 0x50, 0x49, 0x20, 0x53,
	0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x22, 0x50, 0x0a, 0x14, 0x67, 0x52, 0x50, 0x43, 0x2d, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x38,
	0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x68, 0x67, 0x79, 0x6f, 0x77, 0x61, 0x6e, 0x2f, 0x63, 0x68, 0x75, 0x72, 0x63,
	0x68, 0x2d, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x2d, 0x67, 0x72, 0x70, 0x63,
	0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x1a, 0x19, 0x63,
	0x66, 0x6d, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x64, 0x65, 0x76, 0x2e, 0x68, 0x6f, 0x6c, 0x79, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2a, 0x02, 0x02, 0x01, 0x52, 0x55, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x4a, 0x0a, 0x10, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x20, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x34, 0x4a,
	0x32, 0x7b, 0x22, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x3a, 0x20, 0x31, 0x2c, 0x20, 0x22, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x3a, 0x20, 0x22, 0x32, 0x30, 0x30, 0x20, 0xec, 0x97, 0x90, 0x20, 0xed, 0x95,
	0xb4, 0xeb, 0x8b, 0xb9, 0xed, 0x95, 0x98, 0xeb, 0x8a, 0x94, 0x20, 0xec, 0x9d, 0x91, 0xeb, 0x8b,
	0xb5, 0x22, 0x7d, 0x5a, 0x24, 0x0a, 0x22, 0x0a, 0x0c, 0x58, 0x2d, 0x55, 0x73, 0x65, 0x72, 0x2d,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x08, 0x02, 0x1a, 0x0c, 0x78, 0x2d, 0x75, 0x73, 0x65,
	0x72, 0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x02, 0x62, 0x12, 0x0a, 0x10, 0x0a, 0x0c, 0x58,
	0x2d, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x00, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_workspace_v1_workspace_proto_rawDescOnce sync.Once
	file_workspace_v1_workspace_proto_rawDescData = file_workspace_v1_workspace_proto_rawDesc
)

func file_workspace_v1_workspace_proto_rawDescGZIP() []byte {
	file_workspace_v1_workspace_proto_rawDescOnce.Do(func() {
		file_workspace_v1_workspace_proto_rawDescData = protoimpl.X.CompressGZIP(file_workspace_v1_workspace_proto_rawDescData)
	})
	return file_workspace_v1_workspace_proto_rawDescData
}

var file_workspace_v1_workspace_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_workspace_v1_workspace_proto_goTypes = []interface{}{
	(*ListWorkspaceIntroRequest)(nil),          // 0: workspace.v1.ListWorkspaceIntroRequest
	(*ListWorkspaceIntroResponse)(nil),         // 1: workspace.v1.ListWorkspaceIntroResponse
	(*SendWorkspaceInviteMessageRequest)(nil),  // 2: workspace.v1.SendWorkspaceInviteMessageRequest
	(*SendWorkspaceInviteMessageResponse)(nil), // 3: workspace.v1.SendWorkspaceInviteMessageResponse
	(*v1.WorkspaceIntro)(nil),                  // 4: workspace.model.v1.WorkspaceIntro
}
var file_workspace_v1_workspace_proto_depIdxs = []int32{
	4, // 0: workspace.v1.ListWorkspaceIntroResponse.list:type_name -> workspace.model.v1.WorkspaceIntro
	0, // 1: workspace.v1.WorkspaceService.ListWorkspaceIntro:input_type -> workspace.v1.ListWorkspaceIntroRequest
	2, // 2: workspace.v1.WorkspaceService.SendWorkspaceInviteMessage:input_type -> workspace.v1.SendWorkspaceInviteMessageRequest
	1, // 3: workspace.v1.WorkspaceService.ListWorkspaceIntro:output_type -> workspace.v1.ListWorkspaceIntroResponse
	3, // 4: workspace.v1.WorkspaceService.SendWorkspaceInviteMessage:output_type -> workspace.v1.SendWorkspaceInviteMessageResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_workspace_v1_workspace_proto_init() }
func file_workspace_v1_workspace_proto_init() {
	if File_workspace_v1_workspace_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_workspace_v1_workspace_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkspaceIntroRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workspace_v1_workspace_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkspaceIntroResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workspace_v1_workspace_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendWorkspaceInviteMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workspace_v1_workspace_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendWorkspaceInviteMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_workspace_v1_workspace_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_workspace_v1_workspace_proto_goTypes,
		DependencyIndexes: file_workspace_v1_workspace_proto_depIdxs,
		MessageInfos:      file_workspace_v1_workspace_proto_msgTypes,
	}.Build()
	File_workspace_v1_workspace_proto = out.File
	file_workspace_v1_workspace_proto_rawDesc = nil
	file_workspace_v1_workspace_proto_goTypes = nil
	file_workspace_v1_workspace_proto_depIdxs = nil
}
